DROP TABLE IF EXISTS PRODUCT_OWNER;
DROP TABLE IF EXISTS PRODUCT_OWNER_CONTACT;
DROP TABLE IF EXISTS CATEGORY;
DROP TABLE IF EXISTS WAREHOUSE;
DROP TABLE IF EXISTS TRANSACTIONS;
DROP TABLE IF EXISTS ITEMS_BY_CATEGORY;

CREATE TABLE PRODUCT_OWNER (
	  PRODUCT_OWNER_ID INT NOT NULL AUTO_INCREMENT
    , PRODUCT_OWNER_FIRST_NAME VARCHAR(20) NOT NULL
    , PRODUCT_OWNER_LAST_NAME VARCHAR(20) NOT NULL
    , PRODUCT_OWNER_COMPANY VARCHAR(20)
    , PRODUCT_OWNER_STATUS ENUM ('ACTIVE', 'REMOVED') NOT NULL
    , UNIQUE UQ_PRODUCT_OWNER_1 (PRODUCT_OWNER_FIRST_NAME)
	, UNIQUE UQ_PRODUCT_OWNER_2 (PRODUCT_OWNER_LAST_NAME)
    , PRIMARY KEY (PRODUCT_OWNER_ID)
);

CREATE TABLE PRODUCT_OWNER_CONTACT (
	  PRODUCT_OWNER_ID INT NOT NULL
    , CONTACT_TYPE ENUM ('PRIVATE_EMAIL','WORK_EMAIL', 'PRIVATE_PHONE_NUMBER', 'WORK_PHONE_NUMBER') NOT NULL
    , CONTACT VARCHAR(20) NOT NULL
    , PRIMARY KEY (PRODUCT_OWNER_ID, CONTACT_TYPE)
    , CONSTRAINT PRODUCT_OWNER_CONTACT_1 FOREIGN KEY (PRODUCT_OWNER_ID) REFERENCES PRODUCT_OWNER (PRODUCT_OWNER_ID)
);

CREATE TABLE CATEGORY (
      CATEGORY_ID INT NOT NULL AUTO_INCREMENT
	, CATEGORY_TITLE VARCHAR(20) NOT NULL
    , UNIQUE UQ_CATEGORY_1 (CATEGORY_TITLE)
    , PRIMARY KEY (CATEGORY_ID)
);

CREATE TABLE WAREHOUSE (
	  ITEM_ID  INT NOT NULL	AUTO_INCREMENT
	, ITEM_NAME VARCHAR(20) NOT NULL
    , ITEM_COUNT INT NOT NULL
    , ITEM_PRICE DOUBLE NOT NULL
    , PRODUCT_OWNER_ID INT NOT NULL
    , PRIMARY KEY (ITEM_ID)
    , CONSTRAINT WAREHOUSE_1 FOREIGN KEY (PRODUCT_OWNER_ID) REFERENCES PRODUCT_OWNER (PRODUCT_OWNER_ID)
);

CREATE TABLE ITEMS_BY_CATEGORY (
      ITEM_ID INT NOT NULL
	, CATEGORY_ID INT NOT NULL
    ,  PRIMARY KEY (ITEM_ID, CATEGORY_ID)
    , CONSTRAINT ITEMS_BY_CATEGORY_1 FOREIGN KEY (ITEM_ID) REFERENCES WAREHOUSE (ITEM_ID) ON DELETE CASCADE
    , CONSTRAINT ITEMS_BY_CATEGORY_2 FOREIGN KEY (CATEGORY_ID) REFERENCES CATEGORY (CATEGORY_ID)
);

CREATE TABLE TRANSACTIONS (
      TRANSACTION_ID INT NOT NULL AUTO_INCREMENT
	, ITEM_ID INT NOT NULL
    , TRANSACTION_COUNT	INT NOT NULL
    , ACTION_WITH_ITEM ENUM ('STORAGE','REMOVE') NOT NULL
    , ACTION_DATE DATE NOT NULL
    , PRIMARY KEY (TRANSACTION_ID)
    , CONSTRAINT TRANSACTIONS_1 FOREIGN KEY (ITEM_ID) REFERENCES WAREHOUSE (ITEM_ID)
);
